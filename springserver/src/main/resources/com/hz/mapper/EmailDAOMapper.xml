<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hz.dao.EmailDao">

    <insert id="addEmailMessage" parameterType="com.hz.demo.entity.Email">
        insert into email values (#{emailId},#{email},#{status})
    </insert>

    <insert id="addUserRoles" parameterType="com.hz.demo.entity.UserRoles">
        insert into t_user_role values (#{id},#{userId},#{roleId})
    </insert>

    <select id="getEmailList" parameterType="Integer" resultType="com.hz.demo.entity.Email">
        select email,emailId from email where status =#{status}
    </select>

    <select id="getEmail" parameterType="String" resultType="com.hz.demo.entity.Email">
        select email,emailId,status from email where email =#{email}
    </select>

    <select id="getUser" parameterType="com.hz.demo.entity.User" resultType="com.hz.demo.entity.User">
        select id,name,age,bir,password,salt,userId from user where name = #{username}
    </select>

    <select id="getUserById" parameterType="String" resultType="com.hz.demo.entity.User">
        select id,name,age,bir,password,salt,userId from user where userId = #{userId}
    </select>

    <resultMap id="userMap" type="com.hz.demo.entity.User">
        <id column="uid" property="id"></id>
        <result column="name" property="name"></result>

        <collection property="roles" javaType="list" ofType="Role">
            <id column="id" property="id"></id>
            <result column="rname" property="name"></result>
        </collection>
    </resultMap>
    <select id="findRolesByUsername" parameterType="String" resultMap="userMap">
        select u.id uid,u.name,r.id,r.name rname from user u left join t_user_role ur on u.userId =ur.userid
        left join t_role r
        on ur.roleid =r.id
        where u.name= #{username}
    </select>

    <delete id="deleteUserByOwner" parameterType="String">
        delete from user where userId =#{userId} and password =#{password}
    </delete>

    <delete id="deleteUser" parameterType="String">
        delete from user where name =#{username}
    </delete>

    <update id="updateEmailStatus">
        update email set status =#{status} where emailId =#{emailId}
    </update>
</mapper>